FROM twdps/circleci-base-image:alpine-4.2.0

LABEL org.opencontainers.image.authors="nic.cheneweth@thoughtworks.com" \
      org.opencontainers.image.description="Alpine-based CircleCI executor image" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.source="https://github.com/ThoughtWorks-DPS/circleci-aws-infra" \
      org.opencontainers.image.title="circleci-aws-infra" \
      org.opencontainers.image.vendor="ThoughtWorks, Inc."

ENV TERRAFORM_VERSION=1.3.7
ENV TERRAFORM_SHA256SUM=b8cf184dee15dfa89713fe56085313ab23db22e17284a9a27c0999c67ce3021e
ENV TFLINT_VERSION=0.44.1

#SHELL ["/bin/ash", "-o", "pipefail", "-c"]

# sudo since twdps circleci remote docker images set the USER=cirlceci
# hadolint ignore=DL3004
RUN sudo apk add --no-cache \
             gnupg==2.2.40-r0 \
             docker==20.10.21-r2 \
             openrc==0.45.2-r7 \
             nodejs==18.12.1-r0 \
             npm==9.1.2-r0 \
             ruby==3.1.3-r0 \
             ruby-webrick==1.7.0-r1 \
             ruby-bundler==2.3.26-r0 \
             python3==3.10.9-r1 \
             jq==1.6-r2 && \
    sudo apk add --no-cache --virtual build-dependencies \
             build-base==0.5-r3 \
             openssl-dev==3.0.7-r2 \
             python3-dev==3.10.9-r1 \
             ruby-dev==3.1.3-r0 \
             libffi-dev==3.4.4-r0 \
             g++==12.2.1_git20220924-r4 \
             gcc==12.2.1_git20220924-r4 \
             make==4.3-r1 && \
    sudo rc-update add docker boot && \
    sudo python3 -m ensurepip && \
    sudo rm -r /usr/lib/python*/ensurepip && \
    sudo pip3 install --upgrade pip==22.3.1 && \
    if [ ! -e /usr/bin/pip ]; then sudo ln -s /usr/bin/pip3 /usr/bin/pip ; fi && \
    sudo ln -s /usr/bin/pydoc3 /usr/bin/pydoc && \
    sudo pip install --no-binary \
             setuptools==66.0.0 \
             wheel==0.38.4 \
             awscli==1.27.50 \
             invoke==1.7.3 \
             requests==2.28.2 \
             datadog==0.44.0 \
             jinja2==3.1.2 && \
    sudo npm install -g \
             bats@1.8.2 && \
    sudo sh -c "echo 'gem: --no-document' > /etc/gemrc" && \
    sudo gem install \
             awspec:1.28.2 \
             inspec-bin:5.18.14 \
             json:2.6.3 && \
    curl -SLO "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip" > "terraform_${TERRAFORM_VERSION}_linux_amd64.zip" && \
    echo "${TERRAFORM_SHA256SUM}  terraform_${TERRAFORM_VERSION}_linux_amd64.zip" > "terraform_${TERRAFORM_VERSION}_SHA256SUMS" && \
    sha256sum -cs "terraform_${TERRAFORM_VERSION}_SHA256SUMS" && sudo rm "terraform_${TERRAFORM_VERSION}_SHA256SUMS" && \
    sudo unzip "terraform_${TERRAFORM_VERSION}_linux_amd64.zip" -d /usr/local/bin && \
    sudo rm "terraform_${TERRAFORM_VERSION}_linux_amd64.zip" && \
    curl -SLO "https://github.com/terraform-linters/tflint/releases/download/v${TFLINT_VERSION}/tflint_linux_amd64.zip" > tflint_linux_amd64.zip && \
    sudo unzip tflint_linux_amd64.zip -d /usr/local/bin && \
    sudo rm tflint_linux_amd64.zip  && \
    sudo -u circleci mkdir /home/circleci/.gnupg && \
    sudo -u circleci bash -c "echo 'allow-loopback-pinentry' > /home/circleci/.gnupg/gpg-agent.conf" && \
    sudo -u circleci bash -c "echo 'pinentry-mode loopback' > /home/circleci/.gnupg/gpg.conf" && \
    chmod 700 /home/circleci/.gnupg && chmod 600 /home/circleci/.gnupg/* && \
    sudo apk del build-dependencies

COPY inspec /etc/chef/accepted_licenses/inspec

USER circleci
