FROM twdps/circleci-base-image:alpine-8.5.0

LABEL org.opencontainers.image.created="%%CREATED%%" \
      org.opencontainers.image.authors="nic.cheneweth@thoughtworks.com" \
      org.opencontainers.image.documentation="https://github.com/ThoughtWorks-DPS/circleci-infra-aws" \
      org.opencontainers.image.source="https://github.com/ThoughtWorks-DPS/circleci-infra-aws" \
      org.opencontainers.image.url="https://github.com/ThoughtWorks-DPS/circleci-infra-aws" \
      org.opencontainers.image.version="%%VERSION%%" \
      org.opencontainers.image.vendor="ThoughtWorks, Inc." \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.title="circleci-infra-aws" \
      org.opencontainers.image.description="Alpine-based CircleCI executor image for terraform pipelines" \
      org.opencontainers.image.base.name="%%BASE%%"

ENV TERRAFORM_VERSION=1.9.8
ENV TERRAFORM_SHA256SUM=186e0145f5e5f2eb97cbd785bc78f21bae4ef15119349f6ad4fa535b83b10df8
ENV TFLINT_VERSION=0.55.1
ENV TRIVY_VERSION=0.59.0
ENV AWSCLI_VERSION=1.36.17
ENV CHECKOV_VERSION=3.2.360
ENV TERRASCAN_VERSION=1.19.9
ENV SNYK_VERSION=1.1295.2
ENV BATS_VERSION=1.11.1
ENV KUBECTL_VERSION=1.32.1
ENV HELM_VERSION=3.17.0
ENV CIRCLEPIPE_VERSION=0.3.2
ENV COSIGN_VERSION=2.4.1

SHELL ["/bin/ash", "-o", "pipefail", "-c"]

# sudo since twdps circleci remote docker images set the USER=cirlceci
# hadolint ignore=DL3004
RUN sudo apk add --no-cache \
             nodejs-current==23.2.0-r1 \
             npm==10.9.1-r0 \
             ruby==3.3.6-r0 \
             ruby-dev==3.3.6-r0 \
             ruby-webrick==1.8.1-r1 \
             ruby-bundler==2.5.23-r0 \
             ncurses-terminfo-base==6.5_p20241006-r3 \
             python3==3.12.8-r1 \
             python3-dev==3.12.8-r1 \
             perl-utils==5.40.1-r0 \
             libffi-dev==3.4.6-r0 && \
    sudo rm /usr/lib/python3.12/EXTERNALLY-MANAGED && \
    sudo python3 -m ensurepip && \
    sudo rm -r /usr/lib/python*/ensurepip && \
    sudo pip3 install --upgrade pip==25.0 && \
    if [ ! -e /usr/bin/pip ]; then sudo ln -s /usr/bin/pip3 /usr/bin/pip ; fi && \
    sudo ln -s /usr/bin/pydoc3 /usr/bin/pydoc && \
    sudo pip install --no-binary \
             setuptools==75.8.0 \
             wheel==0.45.1 \
             invoke==2.2.0 \
             requests==2.32.3 \
             jinja2==3.1.5 \
             iam-credential-rotation==0.2.2 \
             checkov=="${CHECKOV_VERSION}" \
             awscli=="${AWSCLI_VERSION}" && \
    sudo npm install -g \
             snyk@${SNYK_VERSION} \
             github-release-notes@0.17.3 \
             bats@${BATS_VERSION} && \
    sudo sh -c "echo 'gem: --no-document' > /etc/gemrc" && \
    sudo gem install \
             awspec:1.32.0 \
             nokogiri:1.18.2 \
             json:2.9.1 && \
    curl -SLO "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip" > "terraform_${TERRAFORM_VERSION}_linux_amd64.zip" && \
    echo "${TERRAFORM_SHA256SUM}  terraform_${TERRAFORM_VERSION}_linux_amd64.zip" > "terraform_${TERRAFORM_VERSION}_SHA256SUMS" && \
    sha256sum -cs "terraform_${TERRAFORM_VERSION}_SHA256SUMS" && sudo rm "terraform_${TERRAFORM_VERSION}_SHA256SUMS" && \
    sudo unzip "terraform_${TERRAFORM_VERSION}_linux_amd64.zip" && sudo mv terraform /usr/local/bin/terraform && \
    sudo rm "terraform_${TERRAFORM_VERSION}_linux_amd64.zip" && rm LICENSE.txt && \
    curl -SLO "https://github.com/tenable/terrascan/releases/download/v${TERRASCAN_VERSION}/terrascan_${TERRASCAN_VERSION}_Linux_x86_64.tar.gz" && \
    sudo tar -xf "terrascan_${TERRASCAN_VERSION}_Linux_x86_64.tar.gz" terrascan && \
    sudo mv terrascan /usr/local/bin/terrascan && sudo rm "terrascan_${TERRASCAN_VERSION}_Linux_x86_64.tar.gz" && \
    curl -SLO "https://github.com/terraform-linters/tflint/releases/download/v${TFLINT_VERSION}/tflint_linux_amd64.zip" > tflint_linux_amd64.zip && \
    sudo unzip tflint_linux_amd64.zip -d /usr/local/bin && \
    sudo rm tflint_linux_amd64.zip && \
    curl -LO "https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz" && \
    tar xzf "trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz" trivy && \
    sudo mv trivy /usr/local/bin && rm "trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz" && \
    curl -SLO "https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl" && \
    sudo chmod +x ./kubectl  && \
    sudo mv ./kubectl /usr/local/bin/kubectl && \
    curl -SLO "https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    sudo tar -xf "helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    sudo mv linux-amd64/helm /usr/local/bin && \
    sudo rm -rf linux-amd64/ && \
    sudo rm "helm-v${HELM_VERSION}-linux-amd64.tar.gz" && \
    curl -SLO "https://github.com/ThoughtWorks-DPS/circlepipe/releases/download/${CIRCLEPIPE_VERSION}/circlepipe_Linux_amd64.tar.gz" && \
    mkdir ./circlepipe && tar -xzf circlepipe_Linux_amd64.tar.gz -C ./circlepipe && \
    sudo mv ./circlepipe/circlepipe /usr/local/bin/circlepipe && \
    sudo rm -rf ./circlepipe circlepipe_Linux_amd64.tar.gz && \
    curl -LO "https://github.com/sigstore/cosign/releases/download/v${COSIGN_VERSION}/cosign-linux-amd64" && \
    chmod +x cosign-linux-amd64 && sudo mv cosign-linux-amd64 /usr/local/bin/cosign

USER circleci
